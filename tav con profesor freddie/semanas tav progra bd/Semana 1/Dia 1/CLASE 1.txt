/* BLOQUE DE PROGRAMACION (BLOQUE ANONIMO)
DECLARE
    -- DECLARAR VARIABLES
BEGIN
    -- CODIGO DE PROGRAMACION
END;
*/

/* EJEMPLO 1*/
SET SERVEROUTPUT ON;
DECLARE
BEGIN
    DBMS_OUTPUT.PUT_LINE('HOLA MUNDO');
END;
/** EJEMPLO 2*/

DECLARE
    V_NUMERO NUMBER;
    V_TEXTO VARCHAR2(45);
BEGIN
    V_NUMERO:=&INGRESE_NUMERO;
    V_TEXTO:='&INGRESE_NOMBRE';
    DBMS_OUTPUT.PUT_LINE('SU NUMERO ES:' || V_NUMERO);
    DBMS_OUTPUT.PUT_LINE('SU NOMBRE ES:' || V_TEXTO);
END;

/* EJEMPLO 3*/
DECLARE
    -- VARIABLES
    V_NUMERO NUMBER;
    V_MSG_ERROR VARCHAR2(255);
BEGIN
    -- CODIGO
    V_NUMERO:=5/0;
    DBMS_OUTPUT.PUT_LINE('RESULTADO:' || V_NUMERO);
EXCEPTION
    -- CODIGO EN CASO DE ERROR
    WHEN OTHERS THEN
        v_msg_error:=SQLERRM;
        DBMS_OUTPUT.PUT_LINE('ERROR' || SQLCODE || ' ' || v_msg_error);
END;

/* EJEMPLO 4*/

DECLARE
    V_N1 NUMBER:=2;
BEGIN
    DBMS_OUTPUT.PUT_LINE('NUMERO 1:' || V_N1);
    DECLARE
        V_N2 NUMBER:=5;
    BEGIN
        DBMS_OUTPUT.PUT_LINE('NUMERO 2:' || V_N2);
        DBMS_OUTPUT.PUT_LINE('NUMERO 1 NUEVAMENTE:' || V_N1);
    END;
    DBMS_OUTPU.PUT_LINE('NUMERO 2 NUEVAMENTE:' || V_N2);
END;

/* EJEMPLO 5 : VARIABLES BIND (HOST)*/
VARIABLE V_NUMERO NUMBER;
EXECUTE :V_NUMERO:=2022;

DECLARE
BEGIN
    DBMS_OUTPUT.PUT_LINE('NUMERO:' || :V_NUMERO);
END;

DECLARE
    V_LOCAL NUMBER;
BEGIN
    V_LOCAL:=1+:V_NUMERO;
    DBMS_OUTPUT.PUT_LINE('RESPUESTA:' || V_LOCAL);
END;

/* CREACION DE UN PROCEDIMIENTO ALMACANEDO*/
CREATE OR REPLACE 
PROCEDURE SP_NOMBRE(P_NOMBRE VARCHAR2,P_EDAD NUMBER,P_SALIDA OUT NUMBER)
IS
    V_TIPO VARCHAR2(45);
BEGIN
    DBMS_OUTPUT.PUT_LINE(P_NOMBRE || ' ERES LINDO');
    DBMS_OUTPUT.PUT_LINE(' A TUS TIERNOS ' || P_EDAD);
    V_TIPO:=FN_NOMBRE(P_EDAD);
    DBMS_OUTPUT.PUT_LINE('TIPO DE ALUMNO: ' || V_TIPO);
    P_SALIDA:=1;
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('ERROR');
        P_SALIDA:=0;
END;

DECLARE
    V_SALIDA NUMBER:=5;
BEGIN
    SP_NOMBRE('BYRON',19,V_SALIDA);
    DBMS_OUTPUT.PUT_LINE('RESPUESTA:' || V_SALIDA);
END;


/* CREACION DE FUNCION */
CREATE OR REPLACE FUNCTION FN_NOMBRE(P_EDAD NUMBER) RETURN VARCHAR2
IS
    V_TIPO VARCHAR2(45);
BEGIN
    IF p_edad>=14 THEN
        V_TIPO:='MAYOR DE EDAD';
    ELSE
        V_TIPO:='MENOR DE EDAD';
    END IF;
    RETURN V_TIPO;
EXCEPTION
    WHEN OTHERS THEN
        RETURN 'ERROR';
END;
-- LAS FUNCIONES SE PUEDEN EJECUTAR EN UN 
-- PROCEDIMIENTO, BLOQUE ANONIMO, INSTRUCCION SQL

DECLARE
    V_TIPO VARCHAR2(45);
BEGIN
    V_TIPO:=FN_NOMBRE(25);
    DBMS_OUTPUT.PUT_LINE('TIPO DE ALUMNO:' || V_TIPO);
END;

SELECT FIRST_NAME,HIRE_DATE, 
FN_NOMBRE(extract(YEAR from SYSDATE)-EXTRACT(YEAR FROM HIRE_DATE))
FROM employees;

------------------------------------------------------------------------
/* recuperacion de datos desde una base de datos */

/* ejemplo 1*/
/* recuperar el nombre del empleado codigo 101 */
SELECT FIRST_NAME FROM employees WHERE employee_id=101;

SET SERVEROUTPUT ON;
DECLARE
    V_NOMBRE VARCHAR2(45);
BEGIN
    -- CURSOR IMPLICITO (SOLO RECUPERA 1 VALOR)
    SELECT FIRST_NAME INTO V_NOMBRE
    FROM employees WHERE employee_id>=&INGRESE_ID;
    DBMS_OUTPUT.PUT_LINE('NOMBRE:' || V_NOMBRE);
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('NO ENCONTRO EL EMPLEADO');
    WHEN TOO_MANY_ROWS THEN
        DBMS_OUTPUT.PUT_LINE('SE RETORNAN MUCHAS FILAS');
END;
-------------------------------------------------------------
/* EJEMPLO COMPLETO */
DECLARE

BEGIN
    -- CURSOR EXPLICITO (RECUPERA MUCHOS REG.)
    DBMS_OUTPUT.PUT_LINE(RPAD('NOMBRE',25) || RPAD('SALARIO',15));
    FOR A IN (SELECT * FROM employees)
    LOOP
        DBMS_OUTPUT.PUT_LINE(RPAD( A.FIRST_NAME,25) 
        || LPAD(TO_CHAR(A.SALARY,'$999G999G999'),15));               
    END LOOP;    
END;





